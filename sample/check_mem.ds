#!/usr/bin/env ydsh

# check argument
if $# != 2 {
    echo usage: $0 "[target binary] [test case dir]" 1>&2
    exit 1
}

let bin = $1
let dir = $2

if not(test -x $bin) {
    echo not found executable file: $bin 1>&2
    exit 1
}

# check valgrind
if not(which valgrind) {
    echo need valgrind 1>&2
    exit 1
}

function test($a : String) : Boolean {
    if not(test -f $a) {
        echo not found file: $a 1>&2
        exit 1
    }
    return not(valgrind -v --leak-check=full $bin $a 2>&1 > /dev/null | __gets | grep "blocks are definitely lost" > /dev/null)
}

function __test_each($data : Array<String>, $test : typeof($test)): Boolean {
    var c = 0
    let size = $data.size()
    for $t in $data {
        if $test($t) {
            $c++
            echo -e '\e[32m[OK]\e[0m' $t
        } else {
            echo -e '\e[35m[NG]\e[0m' $t
        }
    }
    echo ++++ result [$c/$size] ++++
    return $c == $size
}

if $__test_each($(find $dir -name "*.ds" | sort), $test) {
    exit 0
} else {
    exit 1
}

