interface org.freedesktop.NetworkManager {
    function GetDevices() : Array<ObjectPath>
    function GetPermissions() : Map<String, String>
    function GetLogging() : String, String
    let NetworkingEnabled : Boolean
    var WirelessEnabled : Boolean
    let Devices : Array<ObjectPath>
    function StateChanged($h : Func<Void,[Uint32]>)
}

function f($s : Uint32) {
    echo state changed : $s
}

var srv = $DBus.systemBus()\
            .service("org.freedesktop.NetworkManager")

try {
    $srv.object(p'/org/feedekstop/Net')
} catch($e : DBusError) {
    $e.backtrace()
}
var a = $srv.object(p'/org/freedesktop/NetworkManager')

type-alias NM org.freedesktop.NetworkManager

# get all properties
var p = ($a as Properties).GetAll("org.freedesktop.NetworkManager")
echo $p

assert($a is NM)
if($a is NM) {
    echo NetworkingEnabled : ${$a.NetworkingEnabled}
    echo WirelessEnabled : ${$a.WirelessEnabled}
    $a.WirelessEnabled = $true
    echo WirelessEnabled : ${$a.WirelessEnabled}
    echo Devices : ${$a.Devices}
    #echo ${$a.GetDevices()}
    echo Permittions : ${$a.GetPermissions()}
    echo Logging : ${$a.GetLogging()}
    $a.StateChanged($f)
}
$DBus.waitSignal($a)
