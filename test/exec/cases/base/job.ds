
# background job
var j = ls &
assert not $j[0]
assert not $j[1]
assert not $j.in()
assert not $j.out()
assert $j.size() == 1

var ex = 34 as Any
try { $j[2]; } catch $e { $ex = $e; }
assert $ex is OutOfRangeError

assert $j as String == "%1"
assert $j
assert $j.wait() == 0
assert not $j


# co-process
$j = coproc { read; echo reply: $REPLY; }
assert $j[0]
assert $j[1]
assert $j.in()
assert $j.out()
assert $j.size() == 1

echo hello > $j[0]
assert { read -u $j[1]; $REPLY; } == "reply: hello"

assert $j
assert $j.wait() == 0
assert not $j
assert not $j.in()
assert not $j.out()
assert $j.size() == 1


# jobs in child
$j = {
    var j = exit 3 &
    exit ${$j.wait()}
} &
assert $j.wait() == 3


var j2 = true &
$j = {
 var s = $j2.wait();
 exit $s;
} &
assert $j.wait() == 255
assert $j2.wait() == 0