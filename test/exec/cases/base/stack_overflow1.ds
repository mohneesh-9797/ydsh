
var a = (0 as Any, )
var b = new Map<Int, Any>()
var c = new Array<Any>()

$a._0 = $a
$b[0] = $c
$c.push(34)
$c.push($b)


# to string
try { $a as String; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { $b as String; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { $c as String; assert($false); } catch($e) { assert($e is StackOverflowError) }


# to command argument
try { echo $a; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { echo $b; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { echo $c; assert($false); } catch($e) { assert($e is StackOverflowError) }


# string interpolation
try { "$a"; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { "$b"; assert($false); } catch($e) { assert($e is StackOverflowError) }
try { "$c"; assert($false); } catch($e) { assert($e is StackOverflowError) }


# clear collection due to prevent memory leak
$a._0 = 1
$b.clear()
$c.clear()