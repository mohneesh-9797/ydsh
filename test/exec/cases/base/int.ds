#$test($status = 1)

# Int32
var i32 = 23i32
assert($i32 is Int)
assert($i32 is Int32)
assert(+43 is Int32)
assert(2147483647 is Int32)
assert(+2147483647 is Int32)
assert(2147483647i32 is Int32)
assert(-2147483647 is Int32)
assert(-2147483647i32 is Int32)

assert(0xFFFFFFFF is Int32)
assert(0xFFFFFFFF_i32 is Int32)
assert(0xfFFFfFfF == -1)
assert(0x7fffffff is Int32)
assert(0x7fffffff == 2147483647)
assert(0x80000000_i32 is Int32)
assert(0x80000000_i32 == -1 - 2147483647i32)
assert(0o37777777777 is Int32)
assert(0o37777777777_i32 == -1)
assert(0o17777777777_i32 is Int32)
assert(0o17777777777_i32 == 2147483647)
assert(0o20000000000 is Int32)
assert(0o20000000000_i32 == -1 - 2147483647i32)

#Int64
var i64 = 63457i64
assert($i64 is Int64)
assert(9223372036854775807i64 is Int64)
assert(+9223372036854775807i64 is Int64)
assert(-9223372036854775807i64 is Int64)

assert(0xFFFFFFFFFFFFFFFF_i64 is Int64)
assert(0xFFFFFFFFFFFFFFFF_i64 == -1i64)
assert(0x7FFFFFFFFFFFFFFF_i64 is Int64)
assert(0x7FFFFFFFFFFFFFFF_i64 == 9223372036854775807i64)
assert(0x8000000000000000_i64 is Int64)
assert(0x8000000000000000_i64 == -1i64 - 9223372036854775807i64)
assert(0o1777777777777777777777_i64 is Int64)
assert(0o1777777777777777777777_i64 == -1i64)
assert(0o777777777777777777777_i64 is Int64)
assert(0o777777777777777777777_i64 == 9223372036854775807i64)
assert(0o1000000000000000000000_i64 is Int64)
assert(0o1000000000000000000000_i64 == -1i64 - 9223372036854775807i64)

# Int32 op
assert((12 + 3) is Int32)
assert(12 + 3 == 15)

assert((150 - 50) is Int32)
assert(150 - 50 == 100)

assert((50 * 10) is Int32)
assert(50 * 10 == 500)

assert((99 / 33) is Int32)
assert(99 / 33 == 3)
var ex = 34 as Any
try { 12/0 } catch($e) { $ex = $e}
assert($ex is ArithmeticError)

assert((99 % 33) is Int32)
assert(99 % 33 == 0)
$ex = 5
try { 12%0 } catch($e) { $ex = $e}
assert($ex is ArithmeticError)

assert(12 == + 12)
assert(-12 == - 12)
assert((! 43) is Int32)

assert(3456 != 345)
assert(3543 < 9999)
assert(32 > -999)
assert(43 <= 43)
assert(!(43 <= 0))
assert(55 >= 55)
assert(43 >= -353)

assert((1 or 2) is Int32)
assert((1 or 2) == 3)

assert((3 and 3) is Int32)
assert((3 and 3) == 3)

assert((1 xor 2) is Int32)
assert((1 xor 2) == 3)

# Int64 op
assert((12i64 + 3i64) is Int64)
assert(12i64 + 3i64 == 15i64)

assert((150i64 - 50i64) is Int64)
assert(150i64 - 50i64 == 100i64)

assert((50i64 * 10i64) is Int64)
assert(50i64 * 10i64 == 500i64)

assert((99i64 / 33i64) is Int64)
assert(99i64 / 33i64 == 3i64)
$ex = 1
try { 12i64/0i64 } catch($e) { $ex = $e}
assert($ex is ArithmeticError)

assert((99i64 % 33i64) is Int64)
assert(99i64 % 33i64 == 0i64)
$ex = 123
try { 12i64%0i64 } catch($e) { $ex = $e}
assert($ex is ArithmeticError)

assert(12i64 == + 12i64)
assert(-12i64 == - 12i64)
assert((! 43i64) is Int64)

assert(3456i64 != 345i64)
assert(3543i64 < 9999i64)
assert(32i64 > -999i64)
assert(43i64 <= 43i64)
assert(! (43i64 <= 0i64))
assert(55i64 >= 55i64)
assert(43i64 >= -353i64)

assert((1i64 or 2i64) is Int64)
assert((1i64 or 2i64) == 3i64)

assert((3i64 and 3i64) is Int64)
assert((3i64 and 3i64) == 3i64)

assert((1i64 xor 2i64) is Int64)
assert((1i64 xor 2i64) == 3i64)


# int cast
assert((234i32 - 5674i64) is Int64)

# widening
var a = 2345i64
$a = 12
assert($a == 12i64)