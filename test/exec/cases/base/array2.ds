
# for sortWith method

function rev($x : Int, $y : Int) : Boolean {
    return $x >= $y
}

var a = [5,1,3,2,4]
assert $a.sortWith($rev) is [Int]
assert $a[0] == 5
assert $a[1] == 4
assert $a[2] == 3
assert $a[3] == 2
assert $a[4] == 1

function rev2($x : Int!, $y : Int!) : Boolean {
    return $x! >= $y!
}

var b = [4 as Int!, new Int!(), -1 as Int!]
var ex = 2 as Any
try { $b.sortWith($rev2); assert $false; } catch $e { $ex = $e; }
assert $ex is UnwrappingError


var c = [3, -1, 2, 5, 1]

function rev3($x : Int, $y : Int) : Boolean {
    $c.sortWith($rev3)
    return $x < $y
}

$ex = 0
try { $c.sortWith($rev3); assert $false; } catch $e { $ex = $e; }
assert $ex is StackOverflowError

true