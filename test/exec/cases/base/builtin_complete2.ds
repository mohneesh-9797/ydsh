function z1($a : typeof($@.size()), $b : typeof($@.size())) : Boolean {
    if($a != $b) {
        echo 1>&2 expect: $a, but actual: $b
        return $false
    }
    return $true
}

z2() {
    let a = $1; let b = $2
    if($a != $b) {
        echo 1>&2 expect: $a, but actual: $b
        return 1
    }
    return 0
}


function assertArray($x : Array<String>, $y : Array<String>) {
    assert($z1($x.size(), $y.size()))

    let size = $x.size()
    for(var i = 0; $i < $size; $i++) {
        if(!z2 $x[$i] $y[$i]) {
            for(var j = 0; $j < $size; $j++) { echo $x[$j] $y[$j]; }
            assert($false)
        }
    }
}

# complete global variable name
{
    var gvars = [
        '#', '$',
        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
        '?', '@',
        'EUID', 'FALSE', 'False', 'HISTCMD', 'HISTFILE', 'HISTFILESIZE',
        'HISTSIZE', 'IFS', 'MACHTYPE', 'ON_ASSERT', 'ON_ERR', 'ON_EXIT', 'OSTYPE', 'PID', 'PPID',
        'PS1', 'PS2', 'RANDOM', 'REPLY', 'SCRIPT_DIR', 'SECONDS', 'SIG', 'SIG_DFL', 'SIG_IGN',
        'STDERR', 'STDIN', 'STDOUT', 'TERM_HOOK',
        'TRUE', 'True', 'UID', 'YDSH_VERSION', 'assertArray', 'false', 'reply', 'true', 'z1'
    ]

    $assertArray($gvars, $(complete '$'))

    var gvars2 = [
        'PID', 'PPID', 'PS1', 'PS2',
    ]

    $assertArray($gvars2, $(complete '$P'))
    $assertArray(new Array<String>(), $(complete '$P '))
    $assertArray($gvars, $(complete '"$'))
    $assertArray($gvars, $(complete 'echo $'))
    $assertArray($gvars2, $(complete 'echo $P'))
}

# env name
$assertArray($(env | while(read) {echo ${$REPLY.split('=')[0]}; }).sort(), $(complete 'import-env '))
$assertArray($(env | grep ^P | while(read) {echo ${$REPLY.split('=')[0]}; }).sort(), $(complete 'import-env P'))


# no completion candidate
assert($(complete '34').empty())
assert($(complete '34 ').empty())
assert($(complete 'echo hello ${45}').empty())
assert($(complete 'echo hello ${45}./').empty())
assert($(complete 'var a = ;').empty())
assert($(complete 'var 23').empty())
assert($(complete 'var ').empty())
assert($(complete '[  )').empty())
assert($(complete 'var 23').empty())
assert($(complete 'function f($').empty())
