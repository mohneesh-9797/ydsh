language: cpp

os: linux
#sudo: required
dist: trusty

branches:
  only:
    - master

env:
  global:
    - BUILD_TYPE=DEBUG
    - OPTION=""

matrix:
  include:
    # gcc 4.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - ninja-build
      env: CXX_BIN=g++-4.8

    # gcc 4.9
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - ninja-build
      env: CXX_BIN=g++-4.9

    # gcc 5
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - ninja-build
      env: CXX_BIN=g++-5

    # gcc 6
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - ninja-build
      env: CXX_BIN=g++-6

    # gcc 7
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - ninja-build
      env: CXX_BIN=g++-7

    # gcc 8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - ninja-build
      env: CXX_BIN=g++-8

    # gcc 8 (Release build)
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - ninja-build
      env: CXX_BIN=g++-8 BUILD_TYPE=release

#    # gcc 8 with LTO
#    - compiler: gcc
#      addons:
#        apt:
#          sources:
#          - ubuntu-toolchain-r-test
#          packages:
#          - g++-8
#          - ninja-build
#      env: CXX_BIN=g++-8 -DUSE_LTO=ON OPTION="-DUSE_LTO=ON"


    # clang 3.5
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.5
            - ninja-build
      env: CXX_BIN=clang++-3.5

    # clang 3.6
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.6
            - ninja-build
      env: CXX_BIN=clang++-3.6

    # clang 3.7
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
            - ninja-build
      env: CXX_BIN=clang++-3.7

    # clang 3.8
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.8
            - ninja-build
      env: CXX_BIN=clang++-3.8

    # clang 3.9
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - ninja-build
      env: CXX_BIN=clang++-3.9

    # clang 4.0
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - ninja-build
      env: CXX_BIN=clang++-4.0

    # clang 5.0
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - ninja-build
      env: CXX_BIN=clang++-5.0

    # clang 6.0
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - ninja-build
      env: CXX_BIN=clang++-6.0

  # clang 7.0
    - addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
          - clang-7
          - ninja-build
      env: CXX_BIN=clang++-7

    # clang 7.0 (Release build)
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - ninja-build
      env: CXX_BIN=clang++-7 BUILD_TYPE=release

#    # clang 6.0 with LTO
#    - compiler: clang
#      addons:
#        apt:
#          sources:
#          - ubuntu-toolchain-r-test
#          - llvm-toolchain-trusty-6.0
#          packages:
#          - clang-6.0
#          - ninja-build
#      env: CXX_BIN=clang++-6.0 BUILD_TYPE=Release OPTION="-DUSE_LTO=ON"

    # clang 7.0 with address sanitizer
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - ninja-build
      env: CXX_BIN=clang++-7 OPTION="-DSANITIZER=address"

    # clang 7.0 with undefined behavior sanitizer
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - ninja-build
      env: CXX_BIN=clang++-7 OPTION="-DSANITIZER=undefined"

    # clang 7.0 with fuzzing
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-7
            - ninja-build
      env: CXX_BIN=clang++-7 OPTION="-DFUZZING_BUILD_MODE=on"

    # gcc7 with coverage
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - ninja-build
      env: CXX_BIN=g++-7 BUILD_TYPE=coverage OPTION="-DCMAKE_C_COMPILER=gcc-7"
      before_script:
        - pip install --user cpp-coveralls
      after_success:
        - coveralls --gcov gcov-7 --gcov-options '\-lp' --exclude test --exclude fuzzing --exclude-pattern .*-source --exclude-pattern '.*\.re2c\.cpp' --exclude nextToken.cpp --exclude tools/json/lexer.cpp --exclude tools/uri/uri_parser.cpp --exclude tools/process/ansi.cpp

script:
  - cmake . -G Ninja -DCMAKE_CXX_COMPILER=$CXX_BIN -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DUSE_EXTRA_TEST=on $OPTION
  - ninja
  - ./ydsh ./tools/scripts/copy_mod4extra.ds
  - ctest --output-on-failure

notifications:
  emails:
    - s.nagisa.xyz@gmail.com
  on_success: change
  on_failure: always
